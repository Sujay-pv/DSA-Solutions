Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.

Input: mat = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,4,7,5,3,6,8,9]

class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m = mat.length, n = mat[0].length;
        int[] result = new int[m * n];
        int r = 0, c = 0, idx = 0;
        boolean up = true;            // direction flag

        while (idx < m * n) {
            result[idx++] = mat[r][c];
            
            if (up) {                 // moving up-right
                if (c == n - 1) {     // last column
                    r++;
                    up = false;
                } else if (r == 0) {   // first row
                    c++;
                    up = false;
                } else { 
                    r--; 
                    c++; 
                }
            } else { // moving down-left
                if (r == m - 1) {       // last row
                    c++;
                    up = true;
                } else if (c == 0) {     // first column
                    r++;
                    up = true;
                } else { 
                    r++; 
                    c--; 
                }
            }
        }
        return result;
    }
}
